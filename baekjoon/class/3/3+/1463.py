# 1로 만들기
# 출처: 이코테
N = int(input())

# dp[i]: i를 1로 만드는데 필요한 연산의 최소 횟수
dp = [0] * (N + 1)

# 2부터 N까지 올라가면서 dp를 갱신
for i in range(2, N + 1):
    dp[i] = dp[i - 1] + 1
    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i // 2] + 1)
    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i // 3] + 1)

print(dp[N])

"""
- 요약: 같은 바텀업 dp 풀이지만 이렇게 반대로 접근할 수도 있다. (사실 이게 정석 풀이)
- 차이점: 진행방향이 반대이고, dp[i]의 정의가 다르고, 채우는 순서도 다르다.
"""

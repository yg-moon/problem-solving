# 오르막 수
N = int(input())

# dp[i][j]: 길이가 i, 끝자리가 j인 오르막 수의 개수
dp = [[1] * 10 for _ in range(N + 1)]

for i in range(2, N + 1):
    for j in range(1, 10):
        # 핵심: 끝자리에 덧붙이는 경우 + 끝자리를 바꾸는 경우
        dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % 10007

print(sum(dp[N]) % 10007)

"""
- 난이도: 실버1
- 분류: dp

- 요약: 규칙을 찾는 2차원 dp
- 예시
    dp[2][2]: (02, 12, 22) -> 3개
    dp[3][1]: (001, 011, 111) -> 3개
    dp[3][2] = [2][2]에서 맨뒤에 2를 붙여주는 경우 + [3][1]에서 맨뒤를 2로 바꾸는 경우
            = (022, 122, 222) + (002, 012, 112) -> 6개
            = dp[2][2] + dp[3][1]
         
- 참고: https://ssinee.tistory.com/entry/백준-11057번-오르막-수-C
"""
